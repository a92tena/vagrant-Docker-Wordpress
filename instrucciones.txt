
# Práctica 3: Wordpress con docker-compose

##crear maquina virutal

~~~
vagrant init bento/ubuntu-22.04
~~~

## Crear los dos ficheros yml para ejecutarlos con el vagrantfile y tener wordpress y mysql

### Utilizando volúmenes docker

~~~
version: '3.1'
services:
  wordpress:
    container_name: servidor_wp
    image: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: user_wp
      WORDPRESS_DB_PASSWORD: asdasd
      WORDPRESS_DB_NAME: bd_wp
    ports:
      - 80:80
    volumes:
      - wordpress_data:/var/www/html/wp-content
  db:
    container_name: servidor_mysql
    image: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: bd_wp
      MYSQL_USER: user_wp
      MYSQL_PASSWORD: asdasd
      MYSQL_ROOT_PASSWORD: asdasd
    volumes:
      - mariadb_data:/var/lib/mysql
volumes:
    wordpress_data:
    mariadb_data:
~~~

### Utilizando bind-mount

~~~
version: '3.1'
services:
  wordpress:
    container_name: servidor_wp
    image: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: user_wp
      WORDPRESS_DB_PASSWORD: asdasd
      WORDPRESS_DB_NAME: bd_wp
    ports:
      - 80:80
    volumes:
      - ./wordpress:/var/www/html/wp-content
  db:
    container_name: servidor_mysql
    image: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: bd_wp
      MYSQL_USER: user_wp
      MYSQL_PASSWORD: asdasd
      MYSQL_ROOT_PASSWORD: asdasd
    volumes:
      - ./mysql:/var/lib/mysql
~~~


## Modificar Vagrantfile
~~~
Vagrant.configure("2") do |config|
    config.vm.box = "bento/ubuntu-22.04"
    # puertos host y máquina virtualizada
    config.vm.network :forwarded_port, host: 8080, guest: 80
    config.vm.network :forwarded_port, host: 5432, guest: 5432
    # config.vm.synced_folder './', '/vagrant', SharedFoldersEnableSymlinksCreate: false
    # require plugin https://github.com/leighmcculloch/vagrant-docker-compose
    config.vagrant.plugins = "vagrant-docker-compose"
    
    # copiamos la carpeta de los estáticos dentro de la máquina. 
    # Para usar rsync, tiene que estar instalado en el host
    # https://learn.microsoft.com/en-us/windows/wsl/install

    # config.vm.provision "file", source: "./web", destination: "/home/vagrant/web"
    # config.vm.synced_folder "./web", "/home/vagrant/web", type: "rsync"  #, rsync__exclude: ".git/"
    # install docker and docker-compose
    config.vm.provision :docker
    config.vm.provision :docker_compose, yml: "/vagrant/docker-compose.yml", rebuild: true, run: "always"
    # config.vm.provision :shell, path: "provision.sh"  
  end
  
~~~
## Levanta y actualiza el sistema

~~~
vagrant up
vagrant ssh
sudo apt update
~~~

## Comprobar version de Docker

~~~
docker --version
~~~

## Para crear el escenario:


~~~
 docker-compose up -d
~~~

## Para listar los contenedores:

~~~
docker-compose ps
~~~


## Para parar los contenedores:

~~~
docker-compose stop 
~~~

## Para borrar los contenedores:

~~~
docker-compose rm
~~~

## Para eliminar el escenario (contenedores, red y volúmenes):

~~~
docker-compose down -v
~~~

